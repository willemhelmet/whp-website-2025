/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 tree.glb --transform
Files: tree.glb [5.37MB] > /Users/whp/Desktop/tree-transformed.glb [781.38KB] (85%)
*/
import { useGLTF } from "@react-three/drei";

export default function Model(props) {
  const { nodes, materials } = useGLTF("/models/tree-transformed.glb");
  return (
    <group {...props} dispose={null}>
      <points rotation={[Math.PI, -1.181, Math.PI]}>
        <bufferGeometry attach="geometry">
          <bufferAttribute
            attach="attributes-position"
            array={nodes.Tree_Leaves.geometry.attributes.position.array}
            count={nodes.Tree_Leaves.geometry.attributes.position.count}
            itemSize={3}
          />
        </bufferGeometry>
        <pointsMaterial
          size={0.12}
          color="#5786F5"
          sizeAttenuation
          // depthWrite={false}
        />
      </points>
      <mesh
        geometry={nodes.Tree_Leaves.geometry}
        material={materials.Japanese_Cherry_Plant_qibsi2_1K_BaseColor}
        rotation={[Math.PI, -1.181, Math.PI]}
      />
      <mesh
        geometry={nodes.tree002.geometry}
        material={materials["Material.002"]}
      />
    </group>
  );
}

useGLTF.preload("/models/tree-transformed.glb");
